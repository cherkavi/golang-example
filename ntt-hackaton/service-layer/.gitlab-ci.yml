stages:
- go
- docker
- deploy

go:
  image: golang:1.10.1
  stage: go
  variables:
    GOOS: linux
    GOARCH: amd64
  artifacts:
    expire_in: 15m
    paths:
    - service-layer
  before_script:
  - apt-get update
  - apt-get install unzip
  - wget https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip
  - unzip protoc-3.5.1-linux-x86_64.zip
  - mv bin/protoc /usr/local/bin/
  - go get -u github.com/golang/protobuf/protoc-gen-go
  - export PATH=$PATH:$GOPATH/bin
  script:
  - ln -s $(pwd) $GOPATH/src/service-layer
  - cd $GOPATH/src/service-layer
  - protoc -I smartpark smartpark/smartpark.proto --go_out=plugins=grpc:smartpark
  - go get service-layer
  - go build
  tags:
  - smartpark

#docker:
#  image: docker:17.07.0-ce
#  stage: docker
#  script:
#  - chmod +x service-layer
#  - ls -la
#  - $SSH docker login $DOCKER_REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASSWORD
#  - docker build --no-cache -t smartparkregistry.stritzke.me/smartpark/service:latest .
#  - docker push smartparkregistry.stritzke.me/smartpark/service:latest
#  only:
#  - master
#  tags:
#  - smartpark


#deploy:
#  image: dstritzke/docker-ansible:2.2.0.0
#  stage: deploy
#  variables:
#    SSH: "ssh -l root -i id_rsa 165.227.131.177 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
#  before_script:
#  - echo "$ID_RSA" > id_rsa && chmod 600 id_rsa
#  script:
#  - $SSH docker login $DOCKER_REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASSWORD
#  - $SSH docker pull smartparkregistry.stritzke.me/smartpark/service:latest
#  - $SSH docker stop service || true
#  - $SSH docker rm service || true
#  - $SSH docker run -d --name service --network web -l traefik.backend=service -l traefik.docker.network=web -l traefik.frontend.rule=Host:service.smartpark.stritzke.me -l traefik.enable=true -l traefik.port=8080 -l traefik.default.protocol=http smartparkregistry.stritzke.me/smartpark/service:latest
#  only:
#  - master